name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DJANGO_SETTINGS_MODULE: messaging_app.settings
      MYSQL_HOST: 127.0.0.1
      MYSQL_PORT: 3306
      MYSQL_DATABASE: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_pass

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r messaging_app/requirements.txt
        pip install flake8 pytest-cov

    - name: Run flake8 Linting
      run: |
        echo "Running flake8 checks..."
        flake8 messaging_app --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 messaging_app --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..10}; do
          if mysql -h 127.0.0.1 -u test_user -ptest_pass -e "SELECT 1;" test_db; then
            echo "MySQL is up!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 5
        done

    - name: Run Django migrations
      run: |
        python messaging_app/manage.py migrate --noinput

    - name: Run tests with coverage
      run: |
        pytest messaging_app/tests/ \
          --ds=messaging_app.settings \
          --junitxml=test-results.xml \
          --cov=messaging_app \
          --cov-report=xml \
          --cov-report=html

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results.xml

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/
